name: Package

on:
  push:
    tags:
      - "*"

jobs:
  package:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get Wails dependencies
        run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Get Wails
        run: go get -u github.com/wailsapp/wails/cmd/wails

      - name: Build package macOS
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin
          echo "building on ${{ matrix.os }}"
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build -p
          echo "converting .app into a .dmg"
          npm install -g appdmg
          appdmg dmg-spec.json pod.dmg
          zip pod.zip pod.dmg
        if: matrix.os == 'macos-latest'

      - name: Build package linux
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building on ${{ matrix.os }}"
          echo "$GITHUB_REF"
          echo "$GITHUB_HEAD_REF"
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build
          tar -czvf pod.tar.gz ./build/pod
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage
          ls ./
          ./linuxdeploy*.AppImage --appdir AppDir --executable ./build/pod --desktop-file=pod.AppImage.desktop --icon-file=appicon--512.png --output appimage
        if: matrix.os == 'ubuntu-latest'

      - name: upload artifact macOS
        uses: actions/upload-artifact@v1
        with:
          name: pod-macOS
          path: pod.zip
        if: matrix.os == 'macos-latest'

      - name: upload artifact linux
        uses: actions/upload-artifact@v2-preview
        with:
          name: pod-linux
          path: pod.tar.gz
        if: matrix.os == 'ubuntu-latest'

      - name: upload artifact linux appimage
        uses: actions/upload-artifact@v2-preview
        with:
          name: pod-linux-appimage
          path: pod-${{ env.VERSION }}-x86_64.AppImage
        if: matrix.os == 'ubuntu-latest'

  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Get the upload URL for a release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download macOS package
        uses: actions/download-artifact@v1
        with:
          name: pod-macOS

      - name: Upload macOS package to release
        id: upload-macOS-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.get_release.outputs.upload_url}}
          asset_path: ./pod-macOS/pod.zip
          asset_name: "pod_${{steps.get_release.outputs.tag_name}}_macOS.zip"
          asset_content_type: application/octet-stream

      - name: Download linux package
        uses: actions/download-artifact@v1
        with:
          name: pod-linux

      - name: Upload Linux package to release
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.get_release.outputs.upload_url}}
          asset_path: ./pod-linux/pod.tar.gz
          asset_name: "pod_${{steps.get_release.outputs.tag_name}}_linux_x86_64.tar.gz"
          asset_content_type: application/octet-stream
