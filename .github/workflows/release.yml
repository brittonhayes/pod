name: Release

on:
  push:
    branches:
      - main

jobs:
  package:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get Wails dependencies
        run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev jq
        if: matrix.os == 'ubuntu-latest'

      - name: Get Wails
        run: go get -u github.com/wailsapp/wails/cmd/wails

      - name: Build package macOS
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin
          echo "building on ${{ matrix.os }}"
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build -p
          echo "converting .app into a .dmg"
          npm install -g appdmg
          appdmg dmg-spec.json pod.dmg
          zip pod.zip pod.dmg
        if: matrix.os == 'macos-latest'

      - name: Build package linux
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building on ${{ matrix.os }}"
          echo "$GITHUB_REF"
          echo "$GITHUB_HEAD_REF"
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage
          ls ./
          ./linuxdeploy*.AppImage --appdir AppDir --executable ./build/pod --desktop-file=pod.AppImage.desktop --icon-file=appicon--512.png --output appimage
          tar -czvf pod.tar.gz ./build/pod
        if: matrix.os == 'ubuntu-latest'

      - name: upload artifact macOS
        uses: actions/upload-artifact@v2
        with:
          name: pod-macOS
          path: pod.zip
          retention-days: 5
        if: matrix.os == 'macos-latest'

      - name: upload artifact linux
        uses: actions/upload-artifact@v2
        with:
          name: pod-linux
          path: pod.tar.gz
          retention-days: 5
        if: matrix.os == 'ubuntu-latest'

      - name: upload artifact linux appimage
        uses: actions/upload-artifact@v2
        with:
          name: pod.AppImage
          path: pod-*-x86_64.AppImage
          retention-days: 5
        if: matrix.os == 'ubuntu-latest'

  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: go-semantic-release/action@v1
        id: create_release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-file: true
          changelog-generator-opt: "emojis=true"
          allow-initial-development-versions: true

      - name: Gets latest created release info
        id: latest_release_info
        uses: jossef/action-latest-release-info@v1.1.0
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download macOS package
        uses: actions/download-artifact@v1
        with:
          name: pod-macOS

      - name: Upload macOS package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: ./pod-macOS/pod.zip
          asset_name: pod_${{steps.create_release.outputs.version}}_macOS.zip
          asset_content_type: application/octet-stream

      - name: Download linux package
        uses: actions/download-artifact@v1
        with:
          name: pod-linux

      - name: Upload Linux package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: ./pod-linux/pod.tar.gz
          asset_name: pod_${{steps.create_release.outputs.version}}_linux_x86_64.tar.gz
          asset_content_type: application/octet-stream

      - name: Upload Linux AppImage to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: ./pod-linux/pod.AppImage
          asset_name: pod.AppImage
          asset_content_type: application/octet-stream
